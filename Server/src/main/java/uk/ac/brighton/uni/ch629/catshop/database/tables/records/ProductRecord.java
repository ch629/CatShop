package uk.ac.brighton.uni.ch629.catshop.database.tables.records;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import uk.ac.brighton.uni.ch629.catshop.database.tables.Product;

import javax.annotation.Generated;

/**
 * This class is generated by jOOQ.
 */
@Generated(value = {"http://www.jooq.org", "3.4.1"},
        comments = "This class is generated by jOOQ")
public class ProductRecord extends UpdatableRecordImpl<ProductRecord> implements Record4<Integer, String, String, Integer> {
    private static final long serialVersionUID = 2010939299;

    /**
     * Create a detached ProductRecord
     */
    public ProductRecord() {
        super(Product.PRODUCT);
    }

    /**
     * Create a detached, initialised ProductRecord
     */
    public ProductRecord(Integer productNumber, String description, String imageName, Integer stock) {
        super(Product.PRODUCT);

        setValue(0, productNumber);
        setValue(1, description);
        setValue(2, imageName);
        setValue(3, stock);
    }

    public ProductRecord(int productNumber, String description, String imageName, int stock) {
        this(new Integer(productNumber), description, imageName, new Integer(stock));
    }

    /**
     * Getter for <code>catshop.product.ProductNumber</code>.
     */
    public Integer getProductNumber() {
        return (Integer) getValue(0);
    }

    public int getProductNumberInt() {
        return getProductNumber().intValue();
    }

    /**
     * Setter for <code>catshop.product.ProductNumber</code>.
     */
    public ProductRecord setProductNumber(Integer value) {
        setValue(0, value);
        return this;
    }

    public ProductRecord setProductNumber(int value) {
        return setProductNumber(new Integer(value));
    }

    /**
     * Getter for <code>catshop.product.ProductDescription</code>.
     */
    public String getProductDescription() {
        return (String) getValue(1);
    }

    /**
     * Setter for <code>catshop.product.ProductDescription</code>.
     */
    public ProductRecord setProductDescription(String value) {
        setValue(1, value);
        return this;
    }

    /**
     * Getter for <code>catshop.product.ProductImage</code>.
     */
    public String getProductImage() {
        return (String) getValue(2);
    }

    /**
     * Setter for <code>catshop.product.ProductImage</code>.
     */
    public ProductRecord setProductImage(String value) {
        setValue(2, value);
        return this;
    }
    /**
     * Getter for <code>catshop.product.ProductStock</code>.
     */
    public Integer getProductStock() {
        return (Integer) getValue(3);
    }

    public int getProductStockInt() {
        return getProductStock().intValue();
    }

    /**
     * Setter for <code>catshop.product.ProductStock</code>.
     */
    public ProductRecord setProductStock(Integer value) {
        setValue(3, value);
        return this;
    }

    public ProductRecord setProductStock(int value) {
        return setProductStock(new Integer(value));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Product.PRODUCT.PRODUCTNUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Product.PRODUCT.PRODUCTDESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Product.PRODUCT.PRODUCTIMAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Product.PRODUCT.PRODUCTSTOCK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getProductNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getProductDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getProductImage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getProductStock();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductRecord value1(Integer value) {
        setProductNumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductRecord value2(String value) {
        setProductDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductRecord value3(String value) {
        setProductImage(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductRecord value4(Integer value) {
        setProductStock(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductRecord values(Integer value1, String value2, String value3, Integer value4) {
        return this;
    }
}
